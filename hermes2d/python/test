#! /usr/bin/env python

"""
Program to execute tests using the py.test like interface.

The advantage over py.test is that it only depends on hermes and should just
work in any circumstances. See "hermes.test?" for documentation.
"""

import os
import sys
from optparse import OptionParser

from hermes2d import test, doctest

def main():
    parser = OptionParser()
    parser.add_option("-v", "--verbose", action="store_true", dest="verbose",
            default=False)
    parser.add_option("--pdb", action="store_true", dest="pdb",
            default=False, help="Run post mortem pdb on each failure")
    parser.add_option("--no-colors", action="store_false", dest="colors",
            default=True, help="Do not report colored [OK] and [FAIL]")
    parser.add_option("-k", dest="kw", help="only run tests matching the given keyword expression", metavar="KEYWORD", default="")
    parser.add_option("--tb", dest="tb", help="traceback verboseness (short/no) [default: %default]", metavar="TBSTYLE", default="short")

    options, args = parser.parse_args()

    ok = test(*args, **{"verbose": options.verbose, "kw": options.kw,
        "tb": options.tb, "pdb": options.pdb, "colors": options.colors})
    if ok:
        ok = doctest(*args, **{"verbose": options.verbose, "kw": options.kw,
        "tb": options.tb, "pdb": options.pdb, "colors": options.colors})
        if ok:
            sys.exit(0)
        else:
            sys.exit(2)
    else:
        sys.exit(1)

if __name__ == "__main__":
    main()
